---                     
# To get gluetun setup                                                                                                                                                                                                                                                                    
# sudo modprobe tun
# sudo mkdir -p /dev/net
# sudo mknod /dev/net/tun c 10 200
# sudo chmod 600 /dev/net/tun                                                                                                                                                                                                                                                                                            
services:
  gluetun:
    image: qmcgaw/gluetun
    container_name: gluetun
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    sysctls:
      - net.ipv6.conf.all.disable_ipv6=0
    ports:
      - 8989:8989     # Sonarr
      - 7878:7878     # Radarr
      - 8080:8080     # qBittorrent
      - 8388:8388/tcp # Shadowsocks
      - 8388:8388/udp # Shadowsocks
      - 8191:8191     # FlareSolverr
      - 9696:9696     # Prowlarr
      - 6969:6969     # Whisparr
      - 3579:3579     # Ombi (if enabled)
      - 8083:80       # Heimdall (HTTP)
      - 8443:443      # Heimdall (HTTPS)
    environment:
      - VPN_SERVICE_PROVIDER=mullvad
      - VPN_TYPE=wireguard
      - WIREGUARD_PRIVATE_KEY=${WIREGUARD_PRIVATE_KEY}
      - WIREGUARD_ADDRESSES=10.67.106.235/32
      - SERVER_COUNTRIES=Sweden
      - FIREWALL_OUTBOUND_SUBNETS=192.168.0.0/16,10.0.0.0/8,172.16.0.0/12
      - WIREGUARD_ALLOWED_IPS=0.0.0.0/0
    restart: always

  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    network_mode: service:gluetun
    shm_size: "2gb"
    environment:
      - LOG_LEVEL=info
    restart: always
    depends_on:
      gluetun:
        condition: service_healthy

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    network_mode: service:gluetun
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Stockholm
    volumes:
      - prowlarr_config:/config
    restart: always
    depends_on:
      gluetun:
        condition: service_healthy

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    network_mode: service:gluetun
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Stockholm
    volumes:
      - sonarr_config:/config
      - /volume1/data:/data
    restart: always
    depends_on:
      gluetun:
        condition: service_healthy

  whisparr:
    image: ghcr.io/thespad/whisparr:latest
    container_name: whisparr
    network_mode: service:gluetun
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Stockholm
    volumes:
      - whisparr_config:/config
      - /volume1/data:/data
    restart: always
    depends_on:
      gluetun:
        condition: service_healthy

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    network_mode: service:gluetun
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Stockholm
    volumes:
      - radarr_config:/config
      - /volume1/data:/data
    restart: always
    depends_on:
      gluetun:
        condition: service_healthy

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    network_mode: service:gluetun
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Stockholm
    volumes:
      - qbittorrent_config:/config
      - /volume1/data/torrents:/downloads
    restart: always
    depends_on:
      gluetun:
        condition: service_healthy

  swaparr-radarr:
    image: ghcr.io/thijmengthn/swaparr:latest
    container_name: swaparr-radarr
    network_mode: service:gluetun
    restart: always
    environment:
      - BASEURL=http://127.0.0.1:7878
      - APIKEY=${RADARR_API_KEY}
      - PLATFORM=radarr
      - TIME_THRESHOLD=2h
      - SIZE_THRESHOLD=25GB
      - CHECK_INTERVAL=10m
      - STRIKE_THRESHOLD=3
      - AGGRESSIVE_STRIKES=true
    depends_on:
      gluetun:
        condition: service_healthy

  swaparr-sonarr:
    image: ghcr.io/thijmengthn/swaparr:latest
    container_name: swaparr-sonarr
    network_mode: service:gluetun
    restart: always
    environment:
      - BASEURL=http://127.0.0.1:8989
      - APIKEY=${SONARR_API_KEY}
      - PLATFORM=sonarr
      - TIME_THRESHOLD=2h
      - SIZE_THRESHOLD=25GB
      - CHECK_INTERVAL=10m
      - STRIKE_THRESHOLD=3
      - AGGRESSIVE_STRIKES=true
    depends_on:
      gluetun:
        condition: service_healthy

  swaparr-whisparr:
    image: ghcr.io/thijmengthn/swaparr:latest
    container_name: swaparr-whisparr
    network_mode: service:gluetun
    restart: always
    environment:
      - BASEURL=http://127.0.0.1:6969
      - APIKEY=${WHISPARR_API_KEY}
      - PLATFORM=whisparr
      - TIME_THRESHOLD=2h
      - SIZE_THRESHOLD=25GB
      - CHECK_INTERVAL=10m
      - STRIKE_THRESHOLD=3
      - AGGRESSIVE_STRIKES=true
    depends_on:
      gluetun:
        condition: service_healthy

  plex:
    image: plexinc/pms-docker
    container_name: plex
    environment:
      - TZ=Europe/Stockholm
      - VERSION=docker
      - HOSTNAME=PlexServer
      - PLEX_UID=1000
      - PLEX_GID=1000
      # - PLEX_CLAIM=claim-xxxx
    volumes:
      - plex_config:/config
      - /volume1/data/media:/data/media
    network_mode: host          # discovery/remote access
    privileged: true            # occasional libusb issues
    restart: unless-stopped
    depends_on:
      gluetun:
        condition: service_healthy

  heimdall:
    image: lscr.io/linuxserver/heimdall:latest
    container_name: heimdall
    network_mode: service:gluetun
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Stockholm
    volumes:
      - heimdall_config:/config
    restart: unless-stopped
    depends_on:
      gluetun:
        condition: service_healthy
buildarr:
  image: ghcr.io/buildarr/buildarr:latest
  container_name: buildarr
  volumes:
    - ./buildarr:/config:ro
  environment:
    - TZ=Europe/Stockholm
  command: ["run", "/config/buildarr.yaml"]
  restart: "no"

  rclone-seedbox-pull:
    image: rclone/rclone:latest
    container_name: rclone-seedbox-pull
    user: "1000:1000"
    restart: unless-stopped
    network_mode: service:gluetun
    environment:
      - TZ=Europe/Stockholm
      - RCLONE_CONFIG=/config/rclone.conf
    volumes:
      - /volume1/data:/data
      - ./rclone:/config  # keep host-managed for easy editing
    entrypoint: /bin/sh
    command:
      - -c
      - |
        while :; do
          rclone copy "seedbox:/home/seedit4me/torrents/qbittorrent" "/data/seedbox-sync/qbittorrent" \
            --transfers=4 --checkers=8 --fast-list \
            --exclude="**/*.!qB" --exclude="**/.unwanted/**" --min-age 5m --max-age 24h \
            --copy-links --create-empty-src-dirs \
            --use-json-log --log-level=INFO --stats=30s;
          sleep 300;
        done
  # ombi:                                                                                                                                                                                                                                                                                   
  #   image: lscr.io/linuxserver/ombi:latest                                                                                                                                                                                                                                                
  #   container_name: ombi                                                                                                                                                                                                                                                                  
  #   network_mode: service:gluetun                                                                                                                                                                                                                                                         
  #   environment:                                                                                                                                                                                                                                                                          
  #     - PUID=1000                                                                                                                                                                                                                                                                         
  #     - PGID=1000                                                                                                                                                                                                                                                                         
  #     - TZ=Europe/Stockholm                                                                                                                                                                                                                                                               
  #   volumes:                                                                                                                                                                                                                                                                              
  #     - /docker/appdata/ombi:/config                                                                                                                                                                                                                                                      
  #   restart: unless-stopped  
volumes:
  prowlarr_config:
  sonarr_config:
  radarr_config:
  whisparr_config:
  qbittorrent_config:
  heimdall_config:
  plex_config:
